<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <bean id="sn-DataSource" class="com.taobao.tddl.client.jdbc.TDataSource" init-method="init">
        <property name="appRuleFile" value="classpath:spring/tddl-rule-sn.xml"/>
        <property name="appName" value="cut"/>
        <property name="useLocalConfig" value="true"/> 
    </bean>
    <bean id="sn-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="sn-DataSource"/>
        <property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:props/sn/mapper/tddlmapper/*.xml</value>
            </list>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.gome.sn.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sn-sqlSessionFactory"/>
        <property name="annotationClass" value="cn.com.gome.sn.MybatisRepository"/>
    </bean>
    <!--虽然加了事务，但是在TDDL中一定要注意分布式事务不一定能完全成功，在同一分片的数据是可以成功的，如果不在同一分片则一定失败-->
    <bean id="sn-txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="sn-DataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="sn-txManager" proxy-target-class="true" />

</beans>