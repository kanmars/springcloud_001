server.port=9000
#########################################################################
#配置成功则可看到成功数据：http://localhost:8888/{application}/{profile}/{label}
#例如:http://127.0.0.1:9000/ServiceAProps/live
#########################################################################
#URL与配置文件的映射关系如下：
#
#/{application}/{profile}[/{label}]
#/{application}-{profile}.yml
#/{label}/{application}-{profile}.yml
#/{application}-{profile}.properties                 --最常用模式
#/{label}/{application}-{profile}.properties
#################git模式#################################################
#本人可用
#spring.cloud.config.server.git.uri=https://github.com/kanmars/config.git
#网络资料
#spring.cloud.config.server.git.uri=http://git.oschina.net/didispace/SpringBoot-Learning/
#spring.cloud.config.server.git.searchPaths=Chapter9-1-4/config-repo
#spring.cloud.config.server.git.username=username
#spring.cloud.config.server.git.password=password
#为了验证上面完成的配置服务器，
#在 http://git.oschina.net/didispace/SpringBoot-Learning/Chapter9-1-4/ 下创建了一个config-repo目录
#作为配置仓库，并根据不同环境新建了下面四个配置文件：
#didispace.properties
#didispace-dev.properties
#didispace-test.properties
#didispace-prod.properties
#################本地文件模式############################################
spring.profiles.active=native
spring.cloud.config.server.native.searchLocations=classpath:/prop
#spring.cloud.config.server.native.searchLocations=file:F:/properties/
#################SVN模式#################################################
#spring.profiles.active=subversion
#spring.cloud.config.server.svn.uri=https://www.xxx.com/svn/demo/demo-config-repo
#spring.cloud.config.server.svn.username=username
#spring.cloud.config.server.svn.password=password
